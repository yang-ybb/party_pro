<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="/">
	<select id="selectUserById" parameterType="Integer" resultType="User">
		select * from userinfo where id = #{value}
	</select>
	
	<select id="selectUserByAttributes" parameterType="User" resultType="User">
		select * from userinfo
		<where>
			<if test="id != null and id != '' ">
				id = #{id, jdbcType=INTEGER}
			</if>
			<if test="studentid != null and studentid != '' ">
				and studentid = #{studentid, jdbcType=VARCHAR}
			</if>
			<if test="name != null and name != '' ">
				and name = #{name, jdbcType=VARCHAR}
			</if>
			<if test="uclass != null and uclass != '' ">
				and uclass = #{uclass, jdbcType=VARCHAR}
			</if>
			<if test="partybranchid != null and partybranchid > 0 ">
				and partybranchid = #{partybranchid, jdbcType=INTEGER}
			</if>
			<if test="status != null">
				and status = #{status, jdbcType=INTEGER}
			</if>
			<if test="next_status != null">
				and next_status = #{next_status, jdbcType=INTEGER}
			</if>
			<if test="is_complete != null">
				and is_complete = #{is_complete, jdbcType=INTEGER}
			</if>
			<if test="applydate_begin != null and applydate_begin != ''">
				and applydate &gt;= #{applydate_begin, jdbcType=DATE}
			</if>
			<if test="applydate_end != null and applydate_end != ''">
				and applydate &lt;= #{applydate_end, jdbcType=DATE}
			</if>
			<if test="be_passpartyclass_date_begin != null and be_passpartyclass_date_begin != ''">
				and be_passpartyclass_date &gt;= #{be_passpartyclass_date_begin, jdbcType=DATE}
			</if>
			<if test="be_passpartyclass_date_end != null and be_passpartyclass_date_end != ''">
				and be_passpartyclass_date &lt;= #{be_passpartyclass_date_end, jdbcType=DATE}
			</if>
			<if test="be_activist_date_begin != null and be_activist_date_begin != ''">
				and be_activist_date &gt;= #{be_activist_date_begin, jdbcType=DATE}
			</if>
			<if test="be_activist_date_end != null and be_activist_date_end != ''">
				and be_activist_date &lt;= #{be_activist_date_end, jdbcType=DATE}
			</if>
			<if test="be_probationary_date_begin != null and be_probationary_date_begin != ''">
				and be_probationary_date &gt;= #{be_probationary_date_begin, jdbcType=DATE}
			</if>
			<if test="be_probationary_date_end != null and be_probationary_date_end != ''">
				and be_probationary_date &lt;= #{be_probationary_date_end, jdbcType=DATE}
			</if>
			<if test="be_fullmember_date_begin != null and be_fullmember_date_begin != ''">
				and be_fullmember_date &gt;= #{be_fullmember_date_begin, jdbcType=DATE}
			</if>
			<if test="be_fullmember_date_end != null and be_fullmember_date_end != ''">
				and be_fullmember_date &lt;= #{be_fullmember_date_end, jdbcType=DATE}
			</if>
		</where>
	</select>

	<select id="getIntroIdListById" parameterType="Integer" resultType="Integer">
		select introid from intro where memid=#{value}
	</select>
	
	<select id="getIntroListById" parameterType="Integer" resultType="User">
		select userinfo.* from userinfo,intro where userinfo.id = intro.introid and intro.memid=#{value}
	</select>

	<insert id="setIntroById" parameterType="PairObjObj">
		insert into intro(memid, introid)
		values
		(#{first},#{second})
	</insert>

	<delete id="deleteIntroById" parameterType="PairObjObj">
		delete from intro
		where
		memid = #{first} and introid=#{second}
	</delete>

	<insert id="addNewPartyBranch" parameterType="PartyBranch">
		insert into PartyBranch(partybranchname, adminid)
		values
		(#partybranchname,#adminid)
		<selectKey resultType="Integer" keyProperty="partybranchid">
			select @@identity as partybranchid
		</selectKey>
	</insert>

	<update id="updatePartyBranch" parameterType="PartyBranch">
		update PartyBranch set
		partybranchname = #{partybranchname},
		adminid = #{adminid}
		where
		partybranchid = #{partybranchid}
	</update>
	
	<select id="checkUser" parameterType="User" resultType="User">
		 select * from userinfo where studentid = #{studentid} and passwd = password(#{passwd})
	</select>

	<select id="getPartyBranchById" parameterType="Integer" resultType="PartyBranch">
		select * from PartyBranch
		where
		partybranchid=#{value}
	</select>

	<select id="getPartyBranchByName" parameterType="Integer" resultType="PartyBranch">
		select * from PartyBranch
		where
		partybranchname=#{value}
	</select>

	<select id="getPartyBranchList" resultType="PartyBranch">
		select * from PartyBranch
	</select>

	<delete id="deletePartyBranchById" parameterType="Integer">
		delete from PartyBranch
		where
		partybranchid=#{value}
	</delete>

	<update id="updatePasswd" parameterType="User">
		update userinfo set
		passwd = password(#{passwd})
		where
		id = #{id}
	</update>
	
	<select id="getUserListInPartybranch" parameterType="Integer" resultType="User">
		select * from userinfo
		where
		partybranchid = #{value}
	</select>

	<select id="listAllUser" resultType="User">
		select * from userinfo
	</select>

	<insert id="insertUser" parameterType="User">
		insert into userinfo (studentid, name, partybranchid, birthday, dormitory, passwd, telephone, uclass, gender, nation, applydate, job, origo, permission, status, is_complete, be_passpartyclass_date, be_activist_date, be_target_date, be_probationary_date, be_fullmember_date)
		values
		(#{studentid}, #{name}, #{partybranchid}, #{birthday}, #{dormitory}, password(#{passwd}), #{telephone}, #{uclass}, #{gender}, #{nation}, #{applydate}, #{job}, #{origo}, #{permission}, #{status}, #{is_complete}, #{be_passpartyclass_date}, #{be_activist_date}, #{be_target_date}, #{be_probationary_date}, #{be_fullmember_date})
		<selectKey resultType="Integer" keyProperty="id">
			select @@identity as id
		</selectKey>
	</insert>

		<update id="checkedUpdateUser" parameterType="User">
		update userinfo set
		studentid = #{studentid},
		name = #{name},
		partybranchid = #{partybranchid},
		birthday = #{birthday},
		dormitory = #{dormitory},
		telephone = #{telephone},
		uclass = #{uclass},
		gender = #{gender},
		nation = #{nation},
		applydate = #{applydate},
		job = #{job},
		origo = #{origo},
		permission = #{permission},
		status = #{status},
		is_complete = #{is_complete},
		be_passpartyclass_date = #{be_passpartyclass_date},
		be_activist_date = #{be_activist_date},
		be_target_date = #{be_target_date},
		be_probationary_date = #{be_probationary_date},
		be_fullmember_date = #{be_fullmember_date}
		where id = #{id}
	</update>

	<delete id="deleteUser" parameterType="Integer">
		delete from userinfo
		where id=#{value};
		delete from tmp_userinfo
		where id=#{value};
		delete from PartyClass
		where uid=#{value};
		delete from Activist
		where uid=#{value};
		delete from ProbMem
		where uid=#{value};
		delete from FullMem
		where uid=#{value};
		delete from commit
		where uid=#{value};
	</delete>

	<select id="getCommitCnt" parameterType="User" resultType="Commit">
		select * from commit where uid=#{id}
	</select>

	<update id="updateCommitCnt" parameterType="Commit">
	  update commit set
	  rudangshenqingshu = #{rudangshenqingshu},
	  jijifenzikaochabiao = #{jijifenzikaochabiao},
	  zizhuan = #{zizhuan},
	  sixianghuibao = #{sixianghuibao},
	  zhengshencailiao = #{zhengshencailiao},
	  zhengshenbaogao = #{zhengshenbaogao},
	  qunzhongyijian = #{qunzhongyijian},
	  dangxiaojieyezheng = #{dangxiaojieyezheng},
	  tuiyourudang = #{tuiyourudang},
	  zhibudahuijilu = #{zhibudahuijilu},
	  fazhandangyuangongshi = #{fazhandangyuangongshi},
	  rudangzhiyuanshu = #{rudangzhiyuanshu},
	  banqizongjie = #{banqizongjie},
	  quannianzongjie = #{quannianzongjie},
	  zhuanzhengshenqing = #{zhuanzhengshenqing},
	  yubeidangyuankaochabiao = #{yubeidangyuankaochabiao},
	  zhuanzhenggongshi = #{zhuanzhenggongshi}
	  where uid = #{uid}
	</update>

	<insert id="createCommitCnt" parameterType="User">
		insert into commit (uid, rudangshenqingshu, jijifenzikaochabiao, zizhuan, sixianghuibao, zhengshencailiao, zhengshenbaogao, qunzhongyijian, dangxiaojieyezheng, tuiyourudang, zhibudahuijilu, fazhandangyuangongshi, rudangzhiyuanshu, banqizongjie, quannianzongjie, zhuanzhengshenqing, yubeidangyuankaochabiao, zhuanzhenggongshi)
		values
		(#{id}, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	</insert>

	<delete id="deleteCommitCnt" parameterType="Commit">
		delete from commit where uid = #{uid}
	</delete>

	<insert id="commitUpdateInfos" parameterType="User">
	  	insert into tmp_userinfo (id, studentid, name, partybranchid, birthday, dormitory, passwd, telephone, uclass, gender, nation, applydate, job, origo, permission, status, next_status, is_complete, be_passpartyclass_date, be_activist_date, be_target_date, be_probationary_date, be_fullmember_date)
	  	values(#{id}, #{studentid}, #{name}, #{partybranchid}, #{birthday}, #{dormitory}, '', #{telephone}, #{uclass}, #{gender}, #{nation}, #{applydate}, #{job}, #{origo}, #{permission}, #{status}, #{next_status}, #{is_complete}, #{be_passpartyclass_date}, #{be_activist_date}, #{be_target_date}, #{be_probationary_date}, #{be_fullmember_date});
	</insert>

	<select id="getUpdateList" resultType="User">
		select * from tmp_userinfo
		order by commit_time
	</select>

	<select id="getUpdateById" parameterType="Integer" resultType="User">
		select * from tmp_userinfo
		where
		id = #{value}
	</select>

	<delete id="deleteUpdateById" parameterType="Integer">
		delete from tmp_userinfo
		where
		id = #{value}
	</delete>

        <select id = "_getIdByCondition" parameterType="Condition" resultType="Integer">
                select id from userinfo where #{arg1} #{op} #{arg2} order by id
        </select>
</mapper>
